par(mfrow=c(1,2))
m<-numeric(2)
sd<-numeric(2)
for (i in 1:2){
hist(Exponencial[,i], plot = TRUE, freq=FALSE)# Store output of hist function
m[i]<-mean(Exponencial[,i])
sd[i]<-sd(Exponencial[,i])
}
par(mfrow=c(1,1))
m
sd
for( i in 1:200 ) { Exponencial$Media_n10[i] = sum(Exponencial[i,1:10] )/10}
for( i in 1:200 ) { Exponencial$Media_n25[i] = sum( Exponencial[i,1:25] )/25}
par(mfrow=c(1,2))
for (i in 1:2){
hist(Exponencial[,25+i], xlim=c(0,1))
}
par(mfrow=c(1,1))
hist(Exponencial[,26], xlim=c(0,1))
Exponencial[,26]
par(mfrow=c(1,2))
for (i in 1:2){
hist(Exponencial[,25+i])
}
par(mfrow=c(1,1))
par(mfrow=c(1,2))
for (i in 1:2){
hist(Exponencial[,25+i])
}
par(mfrow=c(1,1))
par(mfrow=c(1,2))
for (i in 1:2){
hist(Exponencial[,25+i], xlim=c(0,9))
}
par(mfrow=c(1,1))
desv_teoricas[1]<-desv[1]/sqrt(10)
desv_teoricas<-numeric(5)
desv_teoricas[1]<-desv[1]/sqrt(10)
desv_teoricas[2]<-desv[2]/sqrt(25)
desv_teoricas[3]<-desv[3]/sqrt(50)
desv_teoricas[4]<-desv[4]/sqrt(75)
desv_teoricas[5]<-desv[5]/sqrt(100)
desv_teoricas
knitr::opts_chunk$set(echo = TRUE)
muestras_diversas<- read.csv(file="./data/muestras_diversas_simuladas.txt", header=T,
sep = ";", dec = ",", fileEncoding = "WINDOWS-1252")
sapply(muestras_diversas, FUN=summary)
par(mfrow=c(1,2))
curve(dnorm(x,250,10), 200, 300, lwd = 2, main = "Normal(250,10)")
# Poisson
x <- 0:25
#-----------
# lambda: 6.4
#-----------
lambda <- 6.4
plot(dpois(x, lambda), type = "h", lwd = 2,
main = "Poisson(6.4)",
ylab = "P(X = x)", xlab = "Número de eventos")
par(mfrow=c(1,1))
par(mfrow=c(2,3))
# Bernouilli
x<-0:1
p<-0.3
plot(dbinom(x, size=1, prob=p),type="h", ylim=c(0,1), x=c(0,1),lwd=2, main="Bernouilli(0.3)")
# Beta
curve(dbeta(x,9,2), lwd = 2, main = "Beta(9,2)")
# Binomial
x<-0:5
p<-0.48
plot(dbinom(x, size=5, prob=p),type="h", ylim=c(0,1), x=0:5,lwd=2, main="Binomial(5, 0.48)")
# Exponencial
curve(dexp(x,4.4), 0,1.3,lwd = 2, main = "Exp(4.4)")
# Gamma
curve(dgamma(x,shape=1, scale=1.2),0,4,lwd = 2, main = "Gamma(1.2,1)")
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje")
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
hist(x=muestras_diversas$MUESTRA5,freq=FALSE)
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
hist(x=muestras_diversas$MUESTRA7,freq=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje", xlim=c(0,25))
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
lines(density(muestras_diversas$MUESTRA4),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA5,freq=FALSE,xlim=c(200, 300))
lines(density(muestras_diversas$MUESTRA5),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
lines(density(muestras_diversas$MUESTRA6),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA7,freq=FALSE, xlim=c(0,1))
lines(density(muestras_diversas$MUESTRA7),lwd=2, col="red")
par(mfrow=c(1,1))
Bernoulli<- read.csv("./data/cien_muestras_bernoulli.txt", sep=";")
par(mfrow=c(1,3))
m<-numeric(3)
sd<-numeric(3)
for (i in 1:3){
hist_info <- hist(Bernoulli[,i], plot = FALSE)# Store output of hist function
hist_info$density<- hist_info$counts/sum(hist_info$counts)*100    # Compute density values
plot(hist_info, freq = FALSE, ylab="Porcentaje", ylim=c(0,100), main=paste("Histograma de columna", i))
m[i]<-mean(Bernoulli[,i])
sd[i]<-sd(Bernoulli[,i])
}
par(mfrow=c(1,1))
m
sd
for( i in 1:200 ) { Bernoulli$Media_n10[i] = sum( Bernoulli[i,1:10] )/10 }
for( i in 1:200 ) { Bernoulli$Media_n25[i] = sum( Bernoulli[i,1:25] )/25}
for( i in 1:200 ) { Bernoulli$Media_n50[i] = sum( Bernoulli[i,1:50] )/50 }
for( i in 1:200 ) { Bernoulli$Media_n75[i] = sum( Bernoulli[i,1:75] )/75 }
for( i in 1:200 ) { Bernoulli$Media_n100[i] = sum( Bernoulli[i,1:100] )/100 }
par(mfrow=c(2,3))
for (i in 1:5){
hist(Bernoulli[,100+i], xlim=c(0,1))
}
par(mfrow=c(1,1))
medias<-numeric(5)
desv<-numeric(5)
for (i in 1:5){
medias[i]<-mean(Bernoulli[,100+i])
desv[i]<-sd(Bernoulli[,100+i])
}
medias
desv
desv_teoricas<-numeric(5)
desv_teoricas[1]<-desv[1]/sqrt(10)
desv_teoricas[2]<-desv[2]/sqrt(25)
desv_teoricas[3]<-desv[3]/sqrt(50)
desv_teoricas[4]<-desv[4]/sqrt(75)
desv_teoricas[5]<-desv[5]/sqrt(100)
desv_teoricas
knitr::opts_chunk$set(echo = TRUE)
muestras_diversas<- read.csv(file="./data/muestras_diversas_simuladas.txt", header=T,
sep = ";", dec = ",", fileEncoding = "WINDOWS-1252")
sapply(muestras_diversas, FUN=summary)
par(mfrow=c(1,2))
curve(dnorm(x,250,10), 200, 300, lwd = 2, main = "Normal(250,10)")
# Poisson
x <- 0:25
#-----------
# lambda: 6.4
#-----------
lambda <- 6.4
plot(dpois(x, lambda), type = "h", lwd = 2,
main = "Poisson(6.4)",
ylab = "P(X = x)", xlab = "Número de eventos")
par(mfrow=c(1,1))
par(mfrow=c(2,3))
# Bernouilli
x<-0:1
p<-0.3
plot(dbinom(x, size=1, prob=p),type="h", ylim=c(0,1), x=c(0,1),lwd=2, main="Bernouilli(0.3)")
# Beta
curve(dbeta(x,9,2), lwd = 2, main = "Beta(9,2)")
# Binomial
x<-0:5
p<-0.48
plot(dbinom(x, size=5, prob=p),type="h", ylim=c(0,1), x=0:5,lwd=2, main="Binomial(5, 0.48)")
# Exponencial
curve(dexp(x,4.4), 0,1.3,lwd = 2, main = "Exp(4.4)")
# Gamma
curve(dgamma(x,shape=1, scale=1.2),0,4,lwd = 2, main = "Gamma(1.2,1)")
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje")
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
hist(x=muestras_diversas$MUESTRA5,freq=FALSE)
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
hist(x=muestras_diversas$MUESTRA7,freq=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje", xlim=c(0,25))
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
lines(density(muestras_diversas$MUESTRA4),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA5,freq=FALSE,xlim=c(200, 300))
lines(density(muestras_diversas$MUESTRA5),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
lines(density(muestras_diversas$MUESTRA6),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA7,freq=FALSE, xlim=c(0,1))
lines(density(muestras_diversas$MUESTRA7),lwd=2, col="red")
par(mfrow=c(1,1))
Bernoulli<- read.csv("./data/cien_muestras_bernoulli.txt", sep=";")
par(mfrow=c(1,3))
m<-numeric(3)
sd<-numeric(3)
for (i in 1:3){
hist_info <- hist(Bernoulli[,i], plot = FALSE)# Store output of hist function
hist_info$density<- hist_info$counts/sum(hist_info$counts)*100    # Compute density values
plot(hist_info, freq = FALSE, ylab="Porcentaje", ylim=c(0,100), main=paste("Histograma de columna", i))
m[i]<-mean(Bernoulli[,i])
sd[i]<-sd(Bernoulli[,i])
}
par(mfrow=c(1,1))
m
sd
media_global<-mean(Bernoulli)
desv_global<-sd(Bernoulli)
View(Bernoulli)
media_global<-mean(Bernoulli)
class(Bernoulli)
media_global<-mean(as.matrix(Bernoulli))
desv_global<-sd(as.matrix(Bernoulli))
knitr::opts_chunk$set(echo = TRUE)
muestras_diversas<- read.csv(file="./data/muestras_diversas_simuladas.txt", header=T,
sep = ";", dec = ",", fileEncoding = "WINDOWS-1252")
sapply(muestras_diversas, FUN=summary)
par(mfrow=c(1,2))
curve(dnorm(x,250,10), 200, 300, lwd = 2, main = "Normal(250,10)")
# Poisson
x <- 0:25
#-----------
# lambda: 6.4
#-----------
lambda <- 6.4
plot(dpois(x, lambda), type = "h", lwd = 2,
main = "Poisson(6.4)",
ylab = "P(X = x)", xlab = "Número de eventos")
par(mfrow=c(1,1))
par(mfrow=c(2,3))
# Bernouilli
x<-0:1
p<-0.3
plot(dbinom(x, size=1, prob=p),type="h", ylim=c(0,1), x=c(0,1),lwd=2, main="Bernouilli(0.3)")
# Beta
curve(dbeta(x,9,2), lwd = 2, main = "Beta(9,2)")
# Binomial
x<-0:5
p<-0.48
plot(dbinom(x, size=5, prob=p),type="h", ylim=c(0,1), x=0:5,lwd=2, main="Binomial(5, 0.48)")
# Exponencial
curve(dexp(x,4.4), 0,1.3,lwd = 2, main = "Exp(4.4)")
# Gamma
curve(dgamma(x,shape=1, scale=1.2),0,4,lwd = 2, main = "Gamma(1.2,1)")
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje")
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
hist(x=muestras_diversas$MUESTRA5,freq=FALSE)
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
hist(x=muestras_diversas$MUESTRA7,freq=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje", xlim=c(0,25))
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
lines(density(muestras_diversas$MUESTRA4),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA5,freq=FALSE,xlim=c(200, 300))
lines(density(muestras_diversas$MUESTRA5),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
lines(density(muestras_diversas$MUESTRA6),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA7,freq=FALSE, xlim=c(0,1))
lines(density(muestras_diversas$MUESTRA7),lwd=2, col="red")
par(mfrow=c(1,1))
Bernoulli<- read.csv("./data/cien_muestras_bernoulli.txt", sep=";")
par(mfrow=c(1,3))
m<-numeric(3)
sd<-numeric(3)
for (i in 1:3){
hist_info <- hist(Bernoulli[,i], plot = FALSE)# Store output of hist function
hist_info$density<- hist_info$counts/sum(hist_info$counts)*100    # Compute density values
plot(hist_info, freq = FALSE, ylab="Porcentaje", ylim=c(0,100), main=paste("Histograma de columna", i))
m[i]<-mean(Bernoulli[,i])
sd[i]<-sd(Bernoulli[,i])
}
par(mfrow=c(1,1))
m
sd
media_global<-mean(as.matrix(Bernoulli))
desv_global<-sd(as.matrix(Bernoulli))
for( i in 1:200 ) { Bernoulli$Media_n10[i] = sum( Bernoulli[i,1:10] )/10 }
for( i in 1:200 ) { Bernoulli$Media_n25[i] = sum( Bernoulli[i,1:25] )/25}
for( i in 1:200 ) { Bernoulli$Media_n50[i] = sum( Bernoulli[i,1:50] )/50 }
for( i in 1:200 ) { Bernoulli$Media_n75[i] = sum( Bernoulli[i,1:75] )/75 }
for( i in 1:200 ) { Bernoulli$Media_n100[i] = sum( Bernoulli[i,1:100] )/100 }
par(mfrow=c(2,3))
for (i in 1:5){
hist(Bernoulli[,100+i], xlim=c(0,1))
}
par(mfrow=c(1,1))
medias<-numeric(5)
desv<-numeric(5)
for (i in 1:5){
medias[i]<-mean(Bernoulli[,100+i])
desv[i]<-sd(Bernoulli[,100+i])
}
medias
desv
desv_teoricas<-numeric(5)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
desv_teoricas[3]<-desv_global/sqrt(50)
desv_teoricas[4]<-desv_global/sqrt(75)
desv_teoricas[5]<-desv_global/sqrt(100)
desv_teoricas
desv_teoricas<-numeric(5)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
desv_teoricas[3]<-desv_global/sqrt(50)
desv_teoricas[4]<-desv_global/sqrt(75)
desv_teoricas[5]<-desv_global/sqrt(100)
media_global
desv_teoricas
knitr::opts_chunk$set(echo = TRUE)
muestras_diversas<- read.csv(file="./data/muestras_diversas_simuladas.txt", header=T,
sep = ";", dec = ",", fileEncoding = "WINDOWS-1252")
sapply(muestras_diversas, FUN=summary)
par(mfrow=c(1,2))
curve(dnorm(x,250,10), 200, 300, lwd = 2, main = "Normal(250,10)")
# Poisson
x <- 0:25
#-----------
# lambda: 6.4
#-----------
lambda <- 6.4
plot(dpois(x, lambda), type = "h", lwd = 2,
main = "Poisson(6.4)",
ylab = "P(X = x)", xlab = "Número de eventos")
par(mfrow=c(1,1))
par(mfrow=c(2,3))
# Bernouilli
x<-0:1
p<-0.3
plot(dbinom(x, size=1, prob=p),type="h", ylim=c(0,1), x=c(0,1),lwd=2, main="Bernouilli(0.3)")
# Beta
curve(dbeta(x,9,2), lwd = 2, main = "Beta(9,2)")
# Binomial
x<-0:5
p<-0.48
plot(dbinom(x, size=5, prob=p),type="h", ylim=c(0,1), x=0:5,lwd=2, main="Binomial(5, 0.48)")
# Exponencial
curve(dexp(x,4.4), 0,1.3,lwd = 2, main = "Exp(4.4)")
# Gamma
curve(dgamma(x,shape=1, scale=1.2),0,4,lwd = 2, main = "Gamma(1.2,1)")
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje")
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
hist(x=muestras_diversas$MUESTRA5,freq=FALSE)
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
hist(x=muestras_diversas$MUESTRA7,freq=FALSE)
par(mfrow=c(1,1))
par(mfrow=c(2,4))
hist_info1 <- hist(muestras_diversas$MUESTRA1, plot = FALSE)# Store output of hist function
hist_info1$density<- hist_info1$counts/sum(hist_info1$counts)*100    # Compute density values
plot(hist_info1, freq = FALSE, ylab="Porcentaje")# Plot histogram with percentages
hist_info2 <- hist(muestras_diversas$MUESTRA2, plot = FALSE)# Store output of hist function
hist_info2$density<- hist_info2$counts/sum(hist_info2$counts)*100    # Compute density values
plot(hist_info2, freq = FALSE,ylab="Porcentaje")
hist_info3 <- hist(muestras_diversas$MUESTRA3, plot = FALSE)# Store output of hist function
hist_info3$density<- hist_info3$counts/sum(hist_info3$counts)*100    # Compute density values
plot(hist_info3, freq = FALSE,ylab="Porcentaje", xlim=c(0,25))
hist(x=muestras_diversas$MUESTRA4, freq=FALSE)
lines(density(muestras_diversas$MUESTRA4),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA5,freq=FALSE,xlim=c(200, 300))
lines(density(muestras_diversas$MUESTRA5),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA6,freq=FALSE)
lines(density(muestras_diversas$MUESTRA6),lwd=2, col="red")
hist(x=muestras_diversas$MUESTRA7,freq=FALSE, xlim=c(0,1))
lines(density(muestras_diversas$MUESTRA7),lwd=2, col="red")
par(mfrow=c(1,1))
Bernoulli<- read.csv("./data/cien_muestras_bernoulli.txt", sep=";")
par(mfrow=c(1,3))
m<-numeric(3)
sd<-numeric(3)
for (i in 1:3){
hist_info <- hist(Bernoulli[,i], plot = FALSE)# Store output of hist function
hist_info$density<- hist_info$counts/sum(hist_info$counts)*100    # Compute density values
plot(hist_info, freq = FALSE, ylab="Porcentaje", ylim=c(0,100), main=paste("Histograma de columna", i))
m[i]<-mean(Bernoulli[,i])
sd[i]<-sd(Bernoulli[,i])
}
par(mfrow=c(1,1))
m
sd
media_global<-mean(as.matrix(Bernoulli))
desv_global<-sd(as.matrix(Bernoulli))
for( i in 1:200 ) { Bernoulli$Media_n10[i] = sum( Bernoulli[i,1:10] )/10 }
for( i in 1:200 ) { Bernoulli$Media_n25[i] = sum( Bernoulli[i,1:25] )/25}
for( i in 1:200 ) { Bernoulli$Media_n50[i] = sum( Bernoulli[i,1:50] )/50 }
for( i in 1:200 ) { Bernoulli$Media_n75[i] = sum( Bernoulli[i,1:75] )/75 }
for( i in 1:200 ) { Bernoulli$Media_n100[i] = sum( Bernoulli[i,1:100] )/100 }
par(mfrow=c(2,3))
for (i in 1:5){
hist(Bernoulli[,100+i], xlim=c(0,1))
}
par(mfrow=c(1,1))
medias<-numeric(5)
desv<-numeric(5)
for (i in 1:5){
medias[i]<-mean(Bernoulli[,100+i])
desv[i]<-sd(Bernoulli[,100+i])
}
medias
desv
desv_teoricas<-numeric(5)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
desv_teoricas[3]<-desv_global/sqrt(50)
desv_teoricas[4]<-desv_global/sqrt(75)
desv_teoricas[5]<-desv_global/sqrt(100)
media_global
desv_teoricas
Exponencial<- read.csv("./data/25_muestras_exponencial.txt", sep=";", dec=",")
media_global<-mean(as.matrix(Exponencial))
desv_global<-sd(as.matrix(Exponencial))
par(mfrow=c(1,2))
m<-numeric(2)
sd<-numeric(2)
for (i in 1:2){
hist(Exponencial[,i], plot = TRUE, freq=FALSE)# Store output of hist function
m[i]<-mean(Exponencial[,i])
sd[i]<-sd(Exponencial[,i])
}
par(mfrow=c(1,1))
m
sd
for( i in 1:200 ) { Exponencial$Media_n10[i] = sum(Exponencial[i,1:10] )/10}
for( i in 1:200 ) { Exponencial$Media_n25[i] = sum( Exponencial[i,1:25] )/25}
par(mfrow=c(1,2))
for (i in 1:2){
hist(Exponencial[,25+i], xlim=c(0,9))
}
par(mfrow=c(1,1))
medias<-numeric(2)
medias[1]<-mean(Exponencial[,26])
medias[2]<-mean(Exponencial[,27])
desv<-numeric(2)
desv[1]<-sd(Exponencial[,26])
desv[2]<-sd(Exponencial[,27])
desv_teoricas<-numeric(2)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
medias<-numeric(2)
medias[1]<-mean(Exponencial[,26])
medias[2]<-mean(Exponencial[,27])
desv<-numeric(2)
desv[1]<-sd(Exponencial[,26])
desv[2]<-sd(Exponencial[,27])
desv_teoricas<-numeric(2)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
medias
media_global
desv
desv_teoricas
desv_teoricas-desv
desv_teoricas
medias<-numeric(2)
medias[1]<-mean(Exponencial[,26])
medias[2]<-mean(Exponencial[,27])
desv<-numeric(2)
desv[1]<-sd(Exponencial[,26])
desv[2]<-sd(Exponencial[,27])
desv_teoricas<-numeric(2)
desv_teoricas[1]<-desv_global/sqrt(10)
desv_teoricas[2]<-desv_global/sqrt(25)
medias
media_global
desv
desv_teoricas

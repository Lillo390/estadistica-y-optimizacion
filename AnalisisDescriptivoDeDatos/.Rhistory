knitr::opts_chunk$set(echo = TRUE)
#library(ascii)
library(stats)
library(corrplot)
install.packages("corrplot")
#library(ascii)
library(stats)
library(corrplot)
library(descr)
install.packages("descr","dplyr", "ggplot2", "hexbin", "matrixStats", "tidyr", "vioplot")
install.packages("descr", "ggplot2", "hexbin", "matrixStats", "tidyr", "vioplot")
library(dplyr)
library(ggplot2)
library(hexbin)
install.packages("descr", "hexbin", "matrixStats", "tidyr", "vioplot")
install.packages(c("descr", "hexbin", "matrixStats", "tidyr", "vioplot"))
library(hexbin)
library(matrixStats)
library(tidyr)
library(vioplot)
#library(ascii)
library(stats)
library(corrplot)
library(descr)
library(dplyr)
library(ggplot2)
library(hexbin)
library(matrixStats)
library(tidyr)
library(vioplot)
dfw <- read.table(file="./dades/dfw_airline.txt", header=TRUE, fileEncoding = "WINDOWS-1252")
dfw <- read.table(file="./dades/dfw_airline.txt", header=TRUE, fileEncoding = "WINDOWS-1252")
dfw
dim(dfw)
names(dfw)
frecuencia<-dfw[["Frecuencia"]]
tipo<-dfw[["Tipo"]]
tapply(frecuencia, tipo,sum)
tabla<-tapply(frecuencia, tipo, sum)
barplot(tabla)
barplot(tabla, col="cyan", main="Tipo de retraso en los vuelos del aeropuerto de Dallas")
barplot(tabla/sum(frecuencia), col="green", main="Tipo de retraso en los vuelos del aeropuerto de Dallas")
# Create a factor with the wrong order of levels
sizes <- factor(c("small", "large", "large", "small", "medium"))
sizes
sizes <- factor(sizes, levels = c("small", "medium", "large"))
sizes
sizes <- ordered(c("small", "large", "large", "small", "medium"))
sizes <- ordered(sizes, levels = c("small", "medium", "large"))
sizes
state<-read.csv(file="./dades/state.csv", header=T, sep = ",", dec = ".", fileEncoding = "WINDOWS-1252")
state
# tipo de objeto
class(state)
# dimension del banco de datos
dim(state)
# nombres de las columnas/variables
names(state)
# pequena vista de los datos con informacion relevante
str(state)
# igual que la funcion anterior pero un poco mejor
glimpse(state)
#imprime las primeras 10 filas del banco de datos
head(state, n=10)
# imprime las ultimas filas del banco de datos
tail(state, n=5)
state[1,3]
state[1, ]
state[, 1]
mean(state[["Population"]])
mean(state[["Population"]], trim=0.1)
median(state[["Population"]])
weighted.mean(state[["Murder.Rate"]], w=state[["Population"]])
library(matrixStats)
weightedMedian(state[["Murder.Rate"]], w=state[["Population"]])
min(state[["Population"]])
max(state[["Population"]])
range(state[["Population"]])
sd(state[["Population"]])
IQR(state[["Population"]])
mad(state[["Population"]])
quantile(state[["Murder.Rate"]], p=c(0.05, 0.25, 0.50, 0.75, 0.95))
summary(state)
breaks<- seq(from=min(state[["Population"]]), to=max(state[["Population"]]), length=11)
pop_freq <- cut(state[["Population"]], breaks=breaks, right=TRUE, include.lowest=TRUE)
table(pop_freq)
hist(state[["Population"]], breaks=breaks)
poblacion<-state[["Population"]]
hist(poblacion, col="red", breaks=12, freq=TRUE, main="Población de los estados de USA")
asesinatos<-state[["Murder.Rate"]]
hist(asesinatos, col="green", breaks=12, freq=FALSE, main="Número de asesinatos por 100 mil habitantes ")
lines(density(asesinatos), lwd=3, col="blue")
stem(asesinatos)
boxplot(asesinatos, col="cyan", main="Número de asesinatos por cada 100 mil habitantes")
boxplot(poblacion, col="cyan", main="Población de los estados de USA")
body.fat<-read.table("./dades/body.fat.txt", header=T)
dim(body.fat)
attach(body.fat)
names(body.fat)
cor(body.fat)
plot(triceps, grasacorporal)
plot(triceps, grasacorporal, col="red", xlim=c(10,35), ylim=c(10,30), pch=16)
library(corrplot)
corrplot(cor(body.fat), method="ellipse")
kc_tax<- read.table("./dades/kc_tax.txt", sep = ",", header=T )
dim(kc_tax)
names(kc_tax)
head(kc_tax, n=10)
kc_tax0 <- subset(kc_tax, tasa_impuestos < 750000 & dimension>100 &
dimension<3500)
nrow(kc_tax0)
plot(kc_tax0$dimension, kc_tax0$tasa_impuestos)
library(ggplot2)
ggplot(kc_tax0, (aes(x=dimension, y=tasa_impuestos))) +
stat_binhex(colour="blue") +
theme_bw() +
scale_fill_gradient(low="white", high="blue") +
labs(x="dimensi?n (pies cuadrados)", y="tasa de impuestos")
ggplot(kc_tax0, (aes(x=dimension, y=tasa_impuestos))) +
stat_binhex(colour="white") +
theme_bw() +
geom_point(alpha=0.1) +
geom_density2d(colour="white") +
scale_fill_gradient(low="white", high="blue") +
labs(x="dimensión (pies cuadrados)", y="tasa de impuestos")
loan<- read.table("./dades/loan.txt", sep = ",", header=T )
dim(loan)
names(loan)
head(loan, n=10)
library(descr)
x_tab<-CrossTable(loan$home_, loan$status, prop.c=FALSE, prop.chisq=FALSE, prop.t=FALSE)
x_tab
airline<- read.table("./dades/airline_delays.txt", sep = ",", header=T, fileEncoding ="WINDOWS-1252")
dim(airline)
names(airline)
boxplot(retrasos_internos ~ compañia, data=airline, ylim=c(0,50), col="green")
ggplot(data=airline, aes(compañia, retrasos_internos, color="red")) +
ylim(0, 50) +
geom_violin() +
labs(x="compania ", y="porcentaje de retrasos debidos a la compania aerea")
getwd()
